buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-spring-boot-application' version '6.1.1'
}

group = 'me.naiden'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.2.0")
}

docker {
	springBootApplication {
		baseImage = 'adoptopenjdk/openjdk11:alpine'
		ports = [9090, 8080]
		images = ['my-pet:0.0.1','my-pet:latest']
		jvmArgs = ['-Dspring.profiles.active=production', '-Xmx2048m']
	}
}

sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/java'
sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/grpc'


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//todo: implement
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtime("com.h2database:h2:1.4.199")
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

test {
	useJUnitPlatform()
}
